{
  "Redis with RedisInsight": {
    "prefix": "redis-compose",
    "body": [
      "services:",
      "  redis:",
      "    image: redis:latest",
      "    container_name: redis_test",
      "    ports:", 
      "      - \"6379:6379\"",
      "    networks:",
      "      - redis-test-net",
      "  ",
      "  redis-insight:",
      "    image: redis/redisinsight:latest",
      "    container_name: redis_insight_test",
      "    restart: always",
      "    depends_on:",
      "      - redis",
      "    ports:",
      "      - \"5540:5540\"",
      "    volumes:",
      "      - redis-insight:/data",
      "    networks:",
      "      - redis-test-net",
      "",
      "volumes:",
      "  redis-insight:",
      "",
      "networks:",
      "  redis-test-net:",
      "    driver: bridge"
    ],
    "description": "Docker Compose конфиг для Redis + RedisInsight"
  },
  "Postgres Compose": {
    "prefix": "postgres-compose",
    "body": [
      "services:",
      "  postgres:",
      "    image: postgres:latest",
      "    container_name: postgres_db",
      "    restart: always",
      "    environment:",
      "      POSTGRES_USER: \${POSTGRES_USER:-user}",
      "      POSTGRES_PASSWORD: \${POSTGRES_PASSWORD:-password}",
      "      POSTGRES_DB: \${POSTGRES_DB:-app_db}",
      "    ports:",
      "      - \"5432:5432\"",
      "    volumes:",
      "      - postgres_data:/var/lib/postgresql/data",
      "    networks:",
      "      - backend-net",
      "",
      "volumes:",
      "  postgres_data:",
      "",
      "networks:",
      "  backend-net:",
      "    driver: bridge"
    ],
    "description": "Docker Compose конфиг для Postgres"
  },
  "Nginx Compose": {
    "prefix": "nginx-compose",
    "body": [
      "services:",
      "  nginx:",
      "    image: nginx:latest",
      "    container_name: nginx_server",
      "    restart: always",
      "    ports:",
      "      - \"80:80\"",
      "      - \"443:443\"",
      "    volumes:",
      "      - ./nginx.conf:/etc/nginx/nginx.conf:ro",
      "      - ./html:/usr/share/nginx/html:ro",
      "    networks:",
      "      - web-net",
      "",
      "networks:",
      "  web-net:",
      "    driver: bridge"
    ],
    "description": "Docker Compose конфиг для Nginx"
  },
  "Full Stack Compose with RedisInsight": {
    "prefix": "fullstack-redisinsight",
    "body": [
      "services:",
      "  postgres:",
      "    image: postgres:15",
      "    container_name: postgres_db",
      "    restart: always",
      "    environment:",
      "      POSTGRES_USER: \${POSTGRES_USER:-user}",
      "      POSTGRES_PASSWORD: \${POSTGRES_PASSWORD:-password}",
      "      POSTGRES_DB: \${POSTGRES_DB:-app_db}",
      "    ports:",
      "      - \"5432:5432\"",
      "    volumes:",
      "      - postgres_data:/var/lib/postgresql/data",
      "    networks:",
      "      - backend-net",
      "",
      "  redis:",
      "    image: redis:latest",
      "    container_name: redis_test",
      "    ports:",
      "      - \"6379:6379\"",
      "    networks:",
      "      - backend-net",
      "",
      "  redis-insight:",
      "    image: redis/redisinsight:latest",
      "    container_name: redis_insight_test",
      "    restart: always",
      "    depends_on:",
      "      - redis",
      "    ports:",
      "      - \"5540:5540\"",
      "    volumes:",
      "      - redis-insight:/data",
      "    networks:",
      "      - backend-net",
      "",
      "  nginx:",
      "    image: nginx:latest",
      "    container_name: nginx_server",
      "    restart: always",
      "    ports:",
      "      - \"80:80\"",
      "      - \"443:443\"",
      "    volumes:",
      "      - ./nginx.conf:/etc/nginx/nginx.conf:ro",
      "      - ./html:/usr/share/nginx/html:ro",
      "    networks:",
      "      - web-net",
      "",
      "volumes:",
      "  postgres_data:",
      "  redis-insight:",
      "",
      "networks:",
      "  backend-net:",
      "    driver: bridge",
      "  web-net:",
      "    driver: bridge"
    ],
    "description": "Full Stack Docker Compose: Postgres + Redis + RedisInsight + Nginx"
  }
}
